<div class="game-main" style="border-right: 2px solid black">
  <div style="display: flex; justify-content: center; align-items: center; gap: 20px; padding: 10px">
    <!-- The Table Grid -->

    <% @tiles.inspect %>
    <table>
      <% (-3..3).each do |y| %>
        <tr>
          <% (-3..3).each do |x| %>
            <td style="background-color: <%= @tiles[[x, y]] %>;">
              <div class="content">
                <button
                    id="tile-<%= x %>-<%= y %>"
                    class="cell-button"
                    onclick="clickCell(<%= x %>, <%= y %>, '<%= @tiles[[x, y]] %>')">
                </button>
              </div>
            </td>
          <% end %>
        </tr>
      <% end %>
    </table>

    <!-- Navigation Buttons -->
    <div class="navigation plus-layout" id="movement">
      <button class="move-button move-up" onclick="move('up')">▲</button>
      <button class="move-button move-left" onclick="move('left')">◀</button>
      <button class="move-button move-center"></button>
      <button class="move-button move-right" onclick="move('right')">▶</button>
      <button class="move-button move-down" onclick="move('down')">▼</button>
    </div>
  </div>
</div>

<script>
    const cellColorsHTML = <%= raw @tiles.to_json %>;
    const gameIdHTML = <%= @current_game.id %>;
    const currentCharacterHTML = <%= raw @current_character.to_json %>;
</script>

<style>
    table {
        max-width: 500px; /* Set a maximum size for the table */
        border-collapse: collapse; /* Keep the borders clean */
    }

    td {
        width: 14.3%; /* 1/7th of the table width for even columns */
        border: 2px solid black;
        position: relative;
    }

    td .content {
        aspect-ratio: 1 / 1; /* Maintain square cells */
        width: 100%; /* Fill the parent td */
    }

    .cell-button {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: transparent; /* Make the button invisible */
        border: none; /* Remove default button border */
        cursor: pointer; /* Make it clickable */
    }

    .cell-button:hover {
        background-color: rgba(0, 0, 0, 0.1); /* Optional: Add a hover effect */
    }

    .navigation {
        position: relative;
        width: 150px;
        height: 150px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .move-button {
        width: 50px;
        height: 50px;
        background-color: lightgray;
        border: 2px solid black;
        border-radius: 50%;
        text-align: center;
        font-size: 20px;
        cursor: pointer;
        position: absolute;
        transition: background-color 0.2s ease; /* Smooth transition effect */
    }

    .move-up {
        top: 0;
        left: 50%;
        transform: translateX(-50%);
    }

    .move-left {
        top: 50%;
        left: 0;
        transform: translateY(-50%);
    }

    .move-center {
        display: none;
    }

    .move-right {
        top: 50%;
        right: 0;
        transform: translateY(-50%);
    }

    .move-down {
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
    }

    .move-button:hover {
        background-color: #fff; /* Slightly darker gray */
    }

    .player {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 14px;
        color: black;
        pointer-events: none; /* Make it non-interactive */
    }

    .loading-spinner {
        border: 16px solid #f3f3f3; /* Light grey */
        border-top: 16px solid gold; /* Blue */
        border-radius: 50%;
        width: 80px;
        height: 80px;
        animation: spin 2s linear infinite;
        margin: 0 auto;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>
