<!-- app/views/games/_chat.html.erb -->
<div class="game-right">
  <!-- Character Info Section -->
  <div class="character-info">
    <h2 class="character-title">Character Info</h2>
    <% if @current_character.present? %>
      <div class="character-details">
        <p><strong>Username:</strong> <span class="character-value"><%= @current_user.username %></span></p>
        <p><strong>Level:</strong> <span class="character-value"><%= @current_character.level %></span></p>

        <!-- Fancy Health Bar -->
        <div class="health-bar-container">
          <p><strong>HP:</strong>
            <span class="character-value"><%= @current_character.currentHealth %></span> /
            <%= @current_character.maxHealth %>
          </p>
          <div class="health-bar">
            <div class="health-fill" style="width: <%= ((@current_character.currentHealth.to_f / @current_character.maxHealth.to_f) * 100).round(2) %>%;"></div>
          </div>
        </div>
      </div>
    <% else %>
      <p class="no-character-info">No character info available.</p>
    <% end %>
  </div>

  <!-- Chat Section -->
  <div class="chat-container">
    <h2>Chat</h2>
    <div class="chat-messages" id="chat-messages">
      <div class="chat-message"><strong>Server:</strong> this is a test</div>
    </div>
    <%= form_tag chat_send_path,onsubmit: 'clearText()', method: :poll do %>
      <%= text_field_tag 'message', nil, required: true, class: 'chat-input' %>
      <%= submit_tag 'Submit', class: 'btn' %>
    <% end %>
  </div>
</div>

<script>
    //const currentCharacter = <%= raw @current_character.to_json %>; ??????
    let chatPoll;
    updateChat()
    //setInterval(() => {updateChat()}, 3000) //Re-poll the chat every 3 seconds (3000 ms)
    function clearText(event) {
        // access input field
        let input1 = document.getElementById('message');
        // clear the input field.
        input1.value = "";
        return true;
    }
    async function updateChat() {
        console.log("Chat being called!")
        clearTimeout(chatPoll) //If this gets manually called, do not recall it while executing.
        let response = (await fetch(`/chat`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': csrfToken
            },
        }));
        const chatLog = await (response.json())

        const chatBox = document.getElementById('chat-messages')
        chatBox.innerHTML = '' // Remove the old chat messages
        console.log(chatLog)

        for (const message of chatLog.chatLog) { // Create the new messages.
            let newEntry = document.createElement('div')
            newEntry.innerHTML = '<strong>'+message.user+':</strong> '+message.message
            chatBox.appendChild(newEntry)
        }

        chatPoll = setTimeout(() => {updateChat()}, 3000) // Call myself again 3 seconds after the last time I have been called.
    }

</script>

<style>
    .character-info {
        font-family: 'Arial', sans-serif;
        max-width: 400px;
        margin: 20px auto;
        padding: 15px;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        background: #f9f9f9;
    }

    .character-title {
        font-size: 24px;
        font-weight: bold;
        color: #333;
        text-align: center;
        margin-bottom: 15px;
    }

    .character-details p {
        font-size: 16px;
        line-height: 1.5;
        margin: 10px 0;
        color: #555;
    }

    .character-details strong {
        color: #222;
    }

    .character-value {
        font-weight: bold;
        color: #007BFF;
    }

    .no-character-info {
        font-size: 16px;
        color: #888;
        text-align: center;
        margin-top: 15px;
    }

    .health-bar-container {
        text-align: center;
        margin: 15px 0;
    }

    .health-bar {
        width: 200px;
        height: 20px;
        background: #333; /* Black background for depletion */
        border: 2px solid #555;
        border-radius: 5px;
        margin: 0 auto;
        overflow: hidden;
        position: relative;
    }

    .health-fill {
        height: 100%;
        background: linear-gradient(to right, #00FF00, #009900);
        transition: width 0.5s ease-in-out;
    }
</style>
