<div class="game-shop">
  <!-- Main Tabs -->
  <div class="main-tabs">
    <button class="main-tablinks active" data-section="ShopSection">Shop</button>
    <button class="main-tablinks" data-section="ItemsSection">Items</button>
    <button class="main-tablinks" data-section="GameSection">Tile</button>
  </div>

  <!-- Shop Section -->
  <div id="ShopSection" class="main-tabcontent" style="display: block;">
    <div class="shop-container">
      <h2>In-Game Shop</h2>
      <div class="tab">
        <button class="tablinks active" data-category="Weapons">Weapons</button>
        <button class="tablinks" data-category="Armor">Armor</button>
        <button class="tablinks" data-category="Abilities">Abilities</button>
      </div>

      <!-- Weapons Tab Content -->
      <div id="Weapons" class="tabcontent" style="display: block;">
        <!-- Weapons Items List -->
      </div>

      <!-- Armor Tab Content -->
      <div id="Armor" class="tabcontent">
        <!-- Armor Items List -->
      </div>

      <!-- Abilities Tab Content -->
      <div id="Abilities" class="tabcontent">
        <!-- Abilities Items List -->
      </div>
    </div>

    <!-- Button to load AI-generated items -->
    <button id="load-items-button" style="margin-top:20px;">Load Items from AI</button>
  </div>

  <!-- Items Section -->
  <div id="ItemsSection" class="main-tabcontent text-with-border" style="flex: 1 1 auto; max-height: 100%; overflow-y: auto;">
    <h2 class="text-with-border">Your Items</h2>
    <% if @items.present? %>
      <% @items.each do |item| %>
        <div class="item text-with-border" data-item-id="<%= item.id %>">
          <h3 class="text-with-border"><%= item.name %></h3>
          <p class="text-with-border"><strong>Level:</strong> <%= item.level %></p>
          <p class="text-with-border"><strong>Type:</strong> <%= item.item_type %></p>
          <p class="text-with-border"><strong>Description:</strong> <%= item.description %></p>
          <button class="delete-button text-with-border">Delete</button>
          <hr>
        </div>
      <% end %>
    <% else %>
      <p class="text-with-border">You have no items.</p>
    <% end %>
  </div>

  <!-- Game Section -->
  <div id="GameSection" class="main-tabcontent">
    <!-- Game Content -->
    <h2>Tile</h2>
    <p>Display game-related content here.</p>
  </div>
</div>

<script>
    function initializeTabs() {
        // Main Tabs Logic
        const mainTabs = document.querySelectorAll(".main-tablinks");
        const mainTabContents = document.querySelectorAll(".main-tabcontent");

        mainTabs.forEach((tab) => {
            tab.addEventListener("click", (event) => {
                // Hide all main tab contents
                mainTabContents.forEach((content) => (content.style.display = "none"));

                // Remove active class from all main tabs
                mainTabs.forEach((t) => t.classList.remove("active"));

                // Show selected main tab content
                const sectionId = event.target.dataset.section;
                document.getElementById(sectionId).style.display = "block";

                event.target.classList.add("active");
            });
        });

        // Shop Tabs Logic
        const shopSection = document.getElementById("ShopSection");
        if (shopSection) {
            const shopTabs = shopSection.querySelectorAll(".tablinks");
            const shopTabContents = shopSection.querySelectorAll(".tabcontent");

            shopTabs.forEach((tab) => {
                tab.addEventListener("click", (event) => {
                    shopTabContents.forEach((content) => (content.style.display = "none"));
                    shopTabs.forEach((t) => t.classList.remove("active"));

                    const categoryId = event.target.dataset.category;
                    const categoryContent = shopSection.querySelector(`#${categoryId}`);
                    if (categoryContent) categoryContent.style.display = "block";

                    event.target.classList.add("active");
                });
            });
        }

        initializeBuyButtons();
    }

    function initializeBuyButtons() {
        const buyButtons = document.querySelectorAll(".buy-button");
        buyButtons.forEach((button) => {
            button.addEventListener("click", (event) => {
                const itemDetails = event.target.closest(".item-details");
                const itemName = itemDetails.querySelector("h3").textContent;
                const itemPrice = itemDetails.querySelector("p:nth-child(3)").textContent;

                alert(`You have purchased ${itemName} for ${itemPrice}`);

            });
        });
    }

    async function loadItems() {
        try {
            const response = await fetch('/gameshop/generate_items.json');
            if (response.ok) {
                const data = await response.json();
                insertItemsIntoShop(data.items);
            } else {
                console.error("Failed to load items");
            }
        } catch (error) {
            console.error("Error fetching items:", error);
        }
    }

    function insertItemsIntoShop(items) {
        const weaponsContainer = document.getElementById("Weapons");
        const armorContainer = document.getElementById("Armor");
        const abilitiesContainer = document.getElementById("Abilities");

        [weaponsContainer, armorContainer, abilitiesContainer].forEach(container => {
            if (container) container.innerHTML = '';
        });

        items.forEach(item => {
            const itemDiv = document.createElement("div");
            itemDiv.classList.add("item-details");

            itemDiv.innerHTML = `
              <h3>${item.name}</h3>
              <p>${item.description}</p>
              <p>Price: ${item.price}</p>
              <p>Rarity: ${item.rarity}</p>
              <button class="buy-button">Buy</button>
            `;

            if (item.category === "Weapons" && weaponsContainer) {
                weaponsContainer.appendChild(itemDiv);
            } else if (item.category === "Armor" && armorContainer) {
                armorContainer.appendChild(itemDiv);
            } else if (item.category === "Abilities" && abilitiesContainer) {
                abilitiesContainer.appendChild(itemDiv);
            }
        });

        initializeBuyButtons();
    }

    document.addEventListener("DOMContentLoaded", () => {
        initializeTabs();
        loadItems(); // Automatically load items
        const loadItemsButton = document.getElementById("load-items-button");
        if (loadItemsButton) {
            loadItemsButton.addEventListener("click", loadItems);
        }
    });
</script>